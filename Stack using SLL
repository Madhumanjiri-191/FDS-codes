#include <stdio.h>//linked-stack
#include <stdlib.h>

struct node {
    int data;
    struct node *next;
};

struct node *top = NULL;
struct node *newnode, *temp;

void push() {
    newnode = malloc(sizeof(struct node));
    if (newnode == NULL) {
        printf("Memory allocation failed\n");
        return;
    }
    printf("Enter data to be inserted: ");
    scanf("%d", &newnode->data);
    newnode->next = top;
    top = newnode;
}

void pop() {
    if (top == NULL) {
        printf("List is empty\n");
    } else {
        temp = top;
        top = top->next;
        printf("Popped: %d\n", temp->data);
        free(temp);
    }
}

void display() {
    if (top == NULL) {
        printf("Stack is empty\n");
    } else {
        struct node* temp = top;
        printf("Stack elements: ");
        while (temp != NULL) {
            printf("%d -> ", temp->data);
            temp = temp->next;
        }
        printf("NULL\n");
    }
}

int main() {
    int choice, ch = 1;

    do {
        printf("\nMenu:\n 1. Push \n 2. Pop \n 3. Display \n 4. Exit\n");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                push();
                break;
            case 2:
                pop();
                break;
            case 3:
                display();
                break;
            case 4:
                return 0;
            default:
                printf("Invalid choice\n");
        }
    } while (ch == 1);

    return 0;
}
